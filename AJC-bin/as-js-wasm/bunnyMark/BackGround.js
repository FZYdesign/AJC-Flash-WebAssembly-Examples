/**
 * Generated by Apache Flex Cross-Compiler from bunnyMark\BackGround.as
 * bunnyMark.BackGround
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('bunnyMark.BackGround');
goog.require('org.apache.flex.utils.Language');



/**
 * @constructor
 * @extends {flash.display.Sprite}
 */
bunnyMark.BackGround = function() {
  bunnyMark.BackGround.base(this, 'constructor');
  if (this.stage)
    this.init(null);
  else
    this.addEventListener(flash.events.Event.ADDED_TO_STAGE, org.apache.flex.utils.Language.closure(this.init, this, 'init'), false, 0, false);
};
goog.inherits(bunnyMark.BackGround, flash.display.Sprite, 'bunnyMark.BackGround');


/**
 * @private
 * @type {number}
 */
bunnyMark.BackGround.prototype.m_tileWidth = 0;


/**
 * @private
 * @type {number}
 */
bunnyMark.BackGround.prototype.m_tileHeight = 0;


/**
 * @private
 * @type {flash.display.Bitmap}
 */
bunnyMark.BackGround.prototype.m_bitmap;


/**
 * @private
 * @param {flash.events.Event} event
 */
bunnyMark.BackGround.prototype.init = function(event) {
  this.removeEventListener(flash.events.Event.ADDED_TO_STAGE, org.apache.flex.utils.Language.closure(this.init, this, 'init'), false);
  this.m_tileWidth = 64;
  this.m_tileHeight = 64;
  var /** @type {flash.display.BitmapData} */ bitmapData = new flash.display.BitmapData(this.m_tileWidth, this.m_tileHeight, false, 0xff000000);
  this.m_bitmap = new flash.display.Bitmap(bitmapData);
  this.m_bitmap.scaleX = this.stage.stageWidth / this.m_tileWidth;
  this.m_bitmap.scaleY = this.stage.stageHeight / this.m_tileHeight;
  this.addChild(this.m_bitmap);
  this.stage.addEventListener(flash.events.Event.RESIZE, org.apache.flex.utils.Language.closure(this.stageResizeHandler, this, 'stageResizeHandler'), false, 0, false);
  this.stage.addEventListener(flash.events.Event.ENTER_FRAME, org.apache.flex.utils.Language.closure(this.enterFrameHandler, this, 'enterFrameHandler'), false, 0, false);
  this.addEventListener(flash.events.Event.REMOVED_FROM_STAGE, org.apache.flex.utils.Language.closure(this.removed, this, 'removed'), false, 0, false);
};


/**
 * @private
 * @param {flash.events.Event} event
 */
bunnyMark.BackGround.prototype.removed = function(event) {
  this.removeEventListener(flash.events.Event.REMOVED_FROM_STAGE, org.apache.flex.utils.Language.closure(this.removed, this, 'removed'), false);
  this.removeChild(this.m_bitmap);
  this.stage.removeEventListener(flash.events.Event.RESIZE, org.apache.flex.utils.Language.closure(this.stageResizeHandler, this, 'stageResizeHandler'), false);
  this.stage.removeEventListener(flash.events.Event.ENTER_FRAME, org.apache.flex.utils.Language.closure(this.enterFrameHandler, this, 'enterFrameHandler'), false);
};


/**
 * @private
 * @param {flash.events.Event} event
 */
bunnyMark.BackGround.prototype.stageResizeHandler = function(event) {
  this.m_bitmap.scaleX = this.stage.stageWidth / this.m_tileWidth;
  this.m_bitmap.scaleY = this.stage.stageHeight / this.m_tileHeight;
};


/**
 * @private
 * @param {flash.events.Event} event
 */
bunnyMark.BackGround.prototype.enterFrameHandler = function(event) {
  var /** @type {number} */ t = flash.utils.getTimer() / 400.0;
  var /** @type {number} */ scale = 4.0;
  var /** @type {number} */ wave = Math.PI * 6.0 / Number(this.m_tileHeight);
  for (var /** @type {number} */ x = 0; x < this.m_tileWidth; x++) {
    for (var /** @type {number} */ y = 0; y < this.m_tileHeight; y++) {
      var /** @type {number} */ offsetY = Math.sin(x * wave / 20.0 + t) * 30.0 + Math.sin(x * wave / 5.0 + t * 2) * 5.0;
      var /** @type {number} */ offsetX = (2.0 + Math.sin((y + offsetY) * wave + t) + Math.sin((y + offsetY) * wave * 0.7 + t * 2.4)) / 4.0;
      var /** @type {flash.display.BitmapData} */ bitmapData = this.m_bitmap.bitmapData;
      bitmapData.setPixel(x, y, org.apache.flex.utils.Language.uint(255 * offsetX));
      bitmapData.emsc_delete();
    }
  }
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
bunnyMark.BackGround.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'BackGround', qName: 'bunnyMark.BackGround', kind: 'class' }] };


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('bunnyMark.BackGround', bunnyMark.BackGround);



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
bunnyMark.BackGround.prototype.FLEXJS_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {return {};},
    methods: function () {
      return {
        'BackGround': { type: '', declaredBy: 'bunnyMark.BackGround'}
      };
    }
  };
};

//# sourceMappingURL=./BackGround.js.map