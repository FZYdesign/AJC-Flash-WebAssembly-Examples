/**
 * Generated by Apache Flex Cross-Compiler from bunnyMark\BunnyTileTest.as
 * bunnyMark.BunnyTileTest
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('bunnyMark.BunnyTileTest');

goog.require('bunnyMark.Bunny');
goog.require('org.apache.flex.utils.Language');



/**
 * @constructor
 * @extends {flash.display.Sprite}
 * @param {number} numBunnies
 */
bunnyMark.BunnyTileTest = function(numBunnies) {
  bunnyMark.BunnyTileTest.base(this, 'constructor');
  this.m_numBunniesIncrease = numBunnies;
  if (this.stage)
    this.init(null);
  else
    this.addEventListener(flash.events.Event.ADDED_TO_STAGE, org.apache.flex.utils.Language.closure(this.init, this, 'init'));
};
goog.inherits(bunnyMark.BunnyTileTest, flash.display.Sprite, 'bunnyMark.BunnyTileTest');


/**
 * @private
 * @type {number}
 */
bunnyMark.BunnyTileTest.prototype.m_maxX = 0;


/**
 * @private
 * @type {number}
 */
bunnyMark.BunnyTileTest.prototype.m_maxY = 0;


/**
 * @private
 * @type {number}
 */
bunnyMark.BunnyTileTest.prototype.m_minX = 0;


/**
 * @private
 * @type {number}
 */
bunnyMark.BunnyTileTest.prototype.m_minY = 0;


/**
 * @private
 * @type {number}
 */
bunnyMark.BunnyTileTest.prototype.m_gravity;


/**
 * @private
 * @type {number}
 */
bunnyMark.BunnyTileTest.prototype.m_numBunnies = 0;


/**
 * @private
 * @type {number}
 */
bunnyMark.BunnyTileTest.prototype.m_numBunniesIncrease = 0;


/**
 * @private
 * @type {Array}
 */
bunnyMark.BunnyTileTest.prototype.m_bunnies_vector;


/**
 * @private
 * @type {flash.display.BitmapData}
 */
bunnyMark.BunnyTileTest.prototype.m_bunnyBitmapData;


/**
 * @private
 * @param {flash.events.Event} e
 */
bunnyMark.BunnyTileTest.prototype.init = function(e) {
  this.removeEventListener(flash.events.Event.ADDED_TO_STAGE, org.apache.flex.utils.Language.closure(this.init, this, 'init'));
  this.m_gravity = 0.5;
  this.m_minX = this.m_minY = this.m_numBunnies = 0;
  this.m_bunnyBitmapData = new flash.display.BitmapData(26, 37, true, 0xff000000);
  this.m_bunnies_vector = org.apache.flex.utils.Language.Vector();
  var /** @type {flash.display.Loader} */ loader = new flash.display.Loader();
  loader.contentLoaderInfo.addEventListener(flash.events.Event.COMPLETE, org.apache.flex.utils.Language.closure(this.loaderCompleteHandler, this, 'loaderCompleteHandler'));
  loader.load(new flash.net.URLRequest("./assets/skin.png"));
  this.stageResizeHandler(null);
  this.stageClickHandler(null);
  this.stage.addEventListener(flash.events.Event.ENTER_FRAME, org.apache.flex.utils.Language.closure(this.enterFrameHandler, this, 'enterFrameHandler'));
  this.stage.addEventListener(flash.events.Event.RESIZE, org.apache.flex.utils.Language.closure(this.stageResizeHandler, this, 'stageResizeHandler'));
  this.stage.addEventListener(flash.events.MouseEvent.CLICK, org.apache.flex.utils.Language.closure(this.stageClickHandler, this, 'stageClickHandler'));
};


/**
 * @private
 * @param {flash.events.Event} e
 */
bunnyMark.BunnyTileTest.prototype.loaderCompleteHandler = function(e) {
  e.target.removeEventListener(flash.events.Event.COMPLETE, org.apache.flex.utils.Language.closure(this.loaderCompleteHandler, this, 'loaderCompleteHandler'));
  var /** @type {flash.display.LoaderInfo} */ loaderInfo = org.apache.flex.utils.Language.as(e.target, flash.display.LoaderInfo);
  var /** @type {flash.display.Bitmap} */ bitmap = org.apache.flex.utils.Language.as(loaderInfo.content, flash.display.Bitmap);
  this.m_bunnyBitmapData = bitmap.bitmapData;
  for (var /** @type {number} */ i = 0; i < this.m_numBunnies; i++) {
    var /** @type {bunnyMark.Bunny} */ bunny = this.m_bunnies_vector[i];
    if (bunny)
      bunny.bitmapData = this.m_bunnyBitmapData;
  }
};


/**
 * @private
 * @param {flash.events.Event} e
 */
bunnyMark.BunnyTileTest.prototype.enterFrameHandler = function(e) {
  for (var /** @type {number} */ i = 0; i < this.m_numBunnies; i++) {
    var /** @type {bunnyMark.Bunny} */ bunny = this.m_bunnies_vector[i];
    bunny.x += bunny.speedX;
    bunny.y += bunny.speedY;
    bunny.speedY += this.m_gravity;
    if (bunny.x > this.m_maxX) {
      bunny.speedX *= -1.0;
      bunny.x = this.m_maxX;
    } else if (bunny.x < this.m_minX) {
      bunny.speedX *= -1.0;
      bunny.x = this.m_minX;
    }
    if (bunny.y > this.m_maxY) {
      bunny.speedY *= -0.8;
      bunny.y = this.m_maxY;
      if (Math.random() > 0.5)
        bunny.speedY -= 3 + Math.random() * 4;
    } else if (bunny.y < this.m_minY) {
      bunny.speedY = 0;
      bunny.y = this.m_minY;
    }
  }
};


/**
 * @private
 * @param {flash.events.Event} e
 */
bunnyMark.BunnyTileTest.prototype.stageResizeHandler = function(e) {
  this.m_maxX = this.stage.stageWidth;
  this.m_maxY = this.stage.stageHeight;
};


/**
 * @export
 * @param {flash.events.Event} e
 */
bunnyMark.BunnyTileTest.prototype.stageClickHandler = function(e) {
  this.m_numBunnies += this.m_numBunniesIncrease;
  for (var /** @type {number} */ i = 0; i < this.m_numBunniesIncrease; i++) {
    var /** @type {bunnyMark.Bunny} */ bunny = new bunnyMark.Bunny(this.m_bunnyBitmapData);
    bunny.speedX = Math.random() * 5.0;
    bunny.speedY = Math.random() * 5.0 - 2.5;
    var /** @type {number} */ scaleRand = 0.3 + Math.random();
    bunny.scaleX = scaleRand;
    bunny.scaleY = scaleRand;
    bunny.rotation = 120.0 * (15.0 - Math.random() * 30.0);
    this.addChild(bunny);
    this.m_bunnies_vector.push(bunny);
  }
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
bunnyMark.BunnyTileTest.prototype.FLEXJS_CLASS_INFO = { names: [{ name: 'BunnyTileTest', qName: 'bunnyMark.BunnyTileTest', kind: 'class' }] };


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('bunnyMark.BunnyTileTest', bunnyMark.BunnyTileTest);



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
bunnyMark.BunnyTileTest.prototype.FLEXJS_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {return {};},
    methods: function () {
      return {
        'BunnyTileTest': { type: '', declaredBy: 'bunnyMark.BunnyTileTest', parameters: function () { return [  { index: 1, type: 'uint', optional: false } ]; }},
        'stageClickHandler': { type: 'void', declaredBy: 'bunnyMark.BunnyTileTest', parameters: function () { return [  { index: 1, type: 'flash.events.Event', optional: false } ]; }}
      };
    }
  };
};

//# sourceMappingURL=./BunnyTileTest.js.map